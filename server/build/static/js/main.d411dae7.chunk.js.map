{"version":3,"sources":["elements/utilities/Breakpoints.js","components/CalculatorButton.js","constants/calculatorConstants.js","constants/calculatorOperators.js","reducers/calculatorReducer.js","context/CalculatorContext.js","components/CalculatorUpperScreen.js","components/CalculatorScreen.js","components/Calculator.js","context/LogContext.js","elements/components/Container.js","elements/components/Chat.js","components/Logs.js","components/NameForm.js","components/MobileChat.js","App.js","reportWebVitals.js","index.js"],"names":["size","xxs","xs","s","m","l","belowHeight","Object","keys","reduce","accumulator","label","css","below","CalculatorButtonContainer","styled","button","props","width","CalculatorButton","children","clickHandler","onClick","values","ADD_VALUE","REMOVE_VALUE","CLEAR_VALUE","ADD_DECIMAL","ADD_OPERATOR","EQUALS_OPERATOR","MAKE_NEGATIVE","PLUS_SIGN","MINUS_SIGN","TIMES_SIGN","DIVIDE_SIGN","calculatorReducer","state","action","value","savedValue","decimal","operator","negative","log","type","CALCULATOR_CONSTANTS","numberAdded","payload","error","errorMessage","numberRemoved","slice","length","CALCULATOR_OPERATORS","calculateToString","calculate","parseFloat","calculatedValue","calculatedNegative","prevValue","calculated","first","second","returnedValue","toFixed","stringValue","CalculatorContext","createContext","CalculatorProvider","useReducer","calculator","dispatch","Provider","CalculatorUpperScreenContainer","div","CalculatorUpperScreen","useContext","CalculatorScreenContainer","CalculatorScreen","CalculatorBox","CalculatorButtonGrid","Calculator","addValue","val","addOperator","ENDPOINT","process","PRODUCTION_SOCKET","socket","io","LogContext","LogProvider","useState","logs","setLogs","name","setName","color","setColor","useEffect","axios","get","withCredentials","then","res","status","data","window","location","reload","catch","err","console","on","newLogs","emit","changeName","newName","generateRandomColor","randomColor","Math","random","toString","substr","addLog","newLog","id","uuidv4","Container","Name","span","LogContainer","Logs","prev","next","previousRef","useRef","previous","current","isEqual","map","aLog","NameForm","Form","FormGroup","Label","htmlFor","Input","aria-label","onChange","e","target","Color","Button","preventDefault","colorHandler","form","input","Overlay","ButtonWrapper","ChatContainer","ChatHeader","h1","ChatLine","p","MobileChat","mobileMenuOn","timesHandler","className","Header","PageContainer","ChatIconWrapper","App","mobileMenu","setMobileMenu","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d411dae7.chunk.js","sourcesContent":["import { css } from \"styled-components\";\n\nconst size = {\n    xxs: 360,\n    xs: 480,\n    s: 768,\n    m: 1024,\n    l: 1200,\n};\n\n/**\n * @desc Places css breakpoints for max height into styled components.\n */\n//\n\nexport const belowHeight = Object.keys(size).reduce((accumulator, label) => {\n    accumulator[label] = (...args) => css`\n        @media (max-height: ${size[label]}px) {\n            ${css(...args)};\n        }\n    `;\n    return accumulator;\n}, {});\n\n/**\n * @desc Places css breakpoints for max width into styled components.\n */\n//\n\nexport const below = Object.keys(size).reduce((accumulator, label) => {\n    accumulator[label] = (...args) => css`\n        @media (max-width: ${size[label]}px) {\n            ${css(...args)};\n        }\n    `;\n    return accumulator;\n}, {});\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { belowHeight } from \"../elements/utilities\";\n\nconst CalculatorButton = ({ children, width = 1, clickHandler }) => {\n    return (\n        <CalculatorButtonContainer onClick={clickHandler} width={width}>\n            {children}\n        </CalculatorButtonContainer>\n    );\n};\n\nconst CalculatorButtonContainer = styled.button`\n    border: 1px solid #ddd;\n    background-color: #f2f2f2;\n    height: 100%;\n    min-height: 6rem;\n    ${belowHeight.xs`\n        min-height: 3.25rem;\n        `}\n    grid-column: auto / span ${(props) => props.width};\n    font-family: Montserrat, sans-serif;\n    font-size: 1.6rem;\n    cursor: pointer;\n`;\n\nexport default CalculatorButton;\n","const values = {\n    ADD_VALUE: \"ADD_VALUE\",\n    REMOVE_VALUE: \"REMOVE_VALUE\",\n    CLEAR_VALUE: \"CLEAR_VALUE\",\n    ADD_DECIMAL: \"ADD_DECIMAL\",\n    ADD_OPERATOR: \"ADD_OPERATOR\",\n    EQUALS_OPERATOR: \"EQUALS_OPERATOR\",\n    MAKE_NEGATIVE: \"MAKE_NEGATIVE\",\n};\n\nexport default values;\n","const values = {\n    PLUS_SIGN: \"+\",\n    MINUS_SIGN: \"-\",\n    TIMES_SIGN: \"×\",\n    DIVIDE_SIGN: \"÷\",\n};\n\nexport default values;\n","import CALCULATOR_CONSTANTS from \"../constants/calculatorConstants\";\nimport CALCULATOR_OPERATORS from \"../constants/calculatorOperators\";\n\nexport const calculatorReducer = (state, action) => {\n    const { value, savedValue, decimal, operator, negative, log } = state;\n    switch (action.type) {\n        /**\n         * ADD NUMBER\n         * Add a number to the end of value. If the payload's value is 0 and\n         * the value is already 0, return 0.\n         */\n        case CALCULATOR_CONSTANTS.ADD_VALUE:\n            const numberAdded = action.payload;\n            if (value === \"0\") {\n                if (numberAdded === \"0\") {\n                    return state;\n                } else {\n                    return { ...state, error: false, errorMessage: null, value: \"\" + numberAdded };\n                }\n            }\n            return { ...state, error: false, errorMessage: null, value: value + numberAdded };\n        /**\n         * REMOVE NUMBER\n         * Remove a number at the end of the value. If the value is a single digit,\n         * change it to 0. If the value is already 0, if the state has a saved value,\n         * delete the associated value and the saved value.\n         */\n        case CALCULATOR_CONSTANTS.REMOVE_VALUE:\n            if (value === \"0\") {\n                return {\n                    log,\n                    value: \"0\",\n                };\n            }\n            const numberRemoved = value.slice(-1);\n            return {\n                ...state,\n                error: false,\n                errorMessage: null,\n                decimal: numberRemoved === \".\" ? false : decimal,\n                value: value.length <= 1 ? \"0\" : value.slice(0, value.length - 1),\n            };\n        /**\n         * CLEAR VALUE\n         * Change value back to 0 and reset decimal value and negative value.\n         */\n        case CALCULATOR_CONSTANTS.CLEAR_VALUE:\n            return { value: \"0\", log };\n        /**\n         * ADD DECIMAL\n         * Add's a decimal to the value and sets decimal value to true. If decimal\n         * is already present, just returns the current state.\n         */\n        case CALCULATOR_CONSTANTS.ADD_DECIMAL:\n            if (!state.decimal) {\n                return {\n                    ...state,\n                    error: false,\n                    errorMessage: null,\n                    value: value + \".\",\n                    decimal: true,\n                };\n            }\n            return state;\n        /**\n         * ADD AN OPERATOR\n         * Stores the current value as a saved value and saves the operator. If a saved\n         * value and operator is already present, calculates the value, saves it, and saves\n         * the operator.\n         */\n        case CALCULATOR_CONSTANTS.ADD_OPERATOR:\n            if (operator && savedValue) {\n                if (operator === CALCULATOR_OPERATORS.DIVIDE_SIGN && value === \"0\") {\n                    return {\n                        error: true,\n                        errorMessage: \"Divide by zero not allowed!\",\n                        value: \"0\",\n                        log,\n                    };\n                }\n                const { value: calculatedValue, negative: calculatedNegative } = calculateToString(\n                    calculate(parseFloat(savedValue), parseFloat(value), operator)\n                );\n                return {\n                    error: false,\n                    errorMessage: null,\n                    operator: action.payload,\n                    savedValue: \"\" + (calculatedNegative ? \"-\" : \"\") + calculatedValue,\n                    value: \"0\",\n                    decimal: false,\n                    negative: false,\n                    log: { operator, savedValue, prevValue: value, calculatedValue },\n                };\n            }\n            return {\n                error: false,\n                errorMessage: null,\n                operator: action.payload,\n                savedValue: negative ? \"-\" + value : value,\n                value: \"0\",\n                decimal: false,\n                negative: false,\n                log,\n            };\n        /**\n         * MAKE NEGATIVE\n         * Negates the current value of negative in the state. If value is 0, return\n         * state.\n         */\n        case CALCULATOR_CONSTANTS.MAKE_NEGATIVE:\n            if (value === \"0\") return state;\n            return {\n                ...state,\n                negative: !negative,\n            };\n        /**\n         * EQUAL OPERATOR\n         * Calculates the stored value and current value with the operator. Displays the result\n         * in the value and resets all other values in the state. It adds decimal and negative to\n         * state depending on calculate value. If no saved value or operator is present, returns the state.\n         */\n        case CALCULATOR_CONSTANTS.EQUALS_OPERATOR:\n            if (savedValue && operator) {\n                if (operator === CALCULATOR_OPERATORS.DIVIDE_SIGN && value === \"0\") {\n                    return {\n                        error: true,\n                        errorMessage: \"Divide by zero not allowed!\",\n                        value: \"0\",\n                        log,\n                    };\n                }\n\n                const calculated = calculateToString(calculate(parseFloat(savedValue), parseFloat(value), operator));\n\n                return {\n                    ...calculated,\n                    log: {\n                        operator,\n                        savedValue,\n                        prevValue: value,\n                        calculatedValue: (calculated.negative ? \"-\" : \"\") + calculated.value,\n                    },\n                };\n            }\n            return state;\n        default:\n            return state;\n    }\n};\n\n/**\n * @desc Takes in the saved value, the current value, and the operator\n * and calculates the value.\n */\n\nconst calculate = (first, second, operator) => {\n    switch (operator) {\n        case CALCULATOR_OPERATORS.PLUS_SIGN:\n            return first + second;\n        case CALCULATOR_OPERATORS.MINUS_SIGN:\n            return first - second;\n        case CALCULATOR_OPERATORS.TIMES_SIGN:\n            return first * second;\n        case CALCULATOR_OPERATORS.DIVIDE_SIGN:\n            return first / second;\n        default:\n            return 0;\n    }\n};\n\n/**\n * @desc Takes the calculated value of the values and returns an object that\n * describes the value, whether it has a decimal, and whether it is negative.\n */\n\nconst calculateToString = (value) => {\n    let returnedValue = value;\n    if (returnedValue % 1 !== 0) returnedValue = returnedValue.toFixed(2);\n    let stringValue = returnedValue + \"\";\n    if (stringValue[0] === \"-\") {\n        stringValue = stringValue.slice(1, stringValue.length);\n    }\n    return {\n        value: stringValue,\n        decimal: returnedValue % 1 !== 0,\n        negative: returnedValue < 0,\n    };\n};\n","import React, { createContext, useReducer } from \"react\";\nimport { calculatorReducer } from \"../reducers/calculatorReducer\";\n\nexport const CalculatorContext = createContext(null);\n\nconst CalculatorProvider = ({ children }) => {\n    const [calculator, dispatch] = useReducer(calculatorReducer, { value: \"0\" });\n    return <CalculatorContext.Provider value={{ calculator, dispatch }}>{children}</CalculatorContext.Provider>;\n};\n\nexport default CalculatorProvider;\n","import React, { useContext } from \"react\";\nimport { CalculatorContext } from \"../context/CalculatorContext\";\nimport styled from \"styled-components\";\nimport { belowHeight } from \"../elements/utilities\";\n\nconst CalculatorUpperScreen = () => {\n    const { calculator } = useContext(CalculatorContext);\n    const { savedValue, operator, error } = calculator;\n    return (\n        <CalculatorUpperScreenContainer>\n            {error ? (\n                <span>Error!</span>\n            ) : (\n                savedValue &&\n                operator && (\n                    <span>\n                        {savedValue} {operator}\n                    </span>\n                )\n            )}\n        </CalculatorUpperScreenContainer>\n    );\n};\n\nconst CalculatorUpperScreenContainer = styled.div`\n    font-family: Montserrat, sans-serif;\n    color: #f2f2f2;\n    font-size: 1.7rem;\n    min-height: 2.5rem;\n    ${belowHeight.xs`\n        font-size: 1.4rem;\n        min-height: 1.8rem;\n        `}\n    text-align: right;\n    word-wrap: break-word;\n`;\n\nexport default CalculatorUpperScreen;\n","import React, { useContext } from \"react\";\nimport { CalculatorContext } from \"../context/CalculatorContext\";\nimport CalculatorUpperScreen from \"./CalculatorUpperScreen\";\nimport styled from \"styled-components\";\nimport { belowHeight } from \"../elements/utilities\";\n\nconst CalculatorScreen = () => {\n    const { calculator } = useContext(CalculatorContext);\n    const { value, negative } = calculator;\n\n    return (\n        <CalculatorScreenContainer>\n            <CalculatorUpperScreen />\n            <span>\n                {negative ? \"-\" : \"\"}\n                {value}\n            </span>\n        </CalculatorScreenContainer>\n    );\n};\n\nconst CalculatorScreenContainer = styled.div`\n    background: #666;\n    color: white;\n    font-family: Montserrat, sans-serif;\n    font-size: 2.8rem;\n    padding: 1.25rem;\n    ${belowHeight.xs`\n        font-size: 2.2rem;\n        padding: .75rem;\n        `}\n    text-align: right;\n    word-wrap: break-word;\n`;\n\nexport default CalculatorScreen;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport CalculatorButton from \"./CalculatorButton\";\nimport CalculatorScreen from \"./CalculatorScreen\";\nimport { CalculatorContext } from \"../context/CalculatorContext\";\nimport CALCULATOR_CONSTANTS from \"../constants/calculatorConstants\";\nimport CALCULATOR_OPERATORS from \"../constants/calculatorOperators\";\n\nconst Calculator = ({ children }) => {\n    const { dispatch } = useContext(CalculatorContext);\n\n    const addValue = (val) => {\n        dispatch({ type: CALCULATOR_CONSTANTS.ADD_VALUE, payload: val });\n    };\n    const addOperator = (val) => {\n        dispatch({ type: CALCULATOR_CONSTANTS.ADD_OPERATOR, payload: val });\n    };\n\n    return (\n        <CalculatorBox>\n            <CalculatorScreen />\n            <CalculatorButtonGrid>\n                <CalculatorButton clickHandler={() => dispatch({ type: CALCULATOR_CONSTANTS.CLEAR_VALUE })}>\n                    AC\n                </CalculatorButton>\n                <CalculatorButton clickHandler={() => dispatch({ type: CALCULATOR_CONSTANTS.REMOVE_VALUE })}>\n                    DEL\n                </CalculatorButton>\n                <CalculatorButton clickHandler={() => dispatch({ type: CALCULATOR_CONSTANTS.MAKE_NEGATIVE })}>\n                    ±\n                </CalculatorButton>\n                <CalculatorButton clickHandler={() => addOperator(CALCULATOR_OPERATORS.DIVIDE_SIGN)}>\n                    ÷\n                </CalculatorButton>\n                <CalculatorButton clickHandler={() => addValue(1)}>1</CalculatorButton>\n                <CalculatorButton clickHandler={() => addValue(2)}>2</CalculatorButton>\n                <CalculatorButton clickHandler={() => addValue(3)}>3</CalculatorButton>\n                <CalculatorButton clickHandler={() => addOperator(CALCULATOR_OPERATORS.TIMES_SIGN)}>×</CalculatorButton>\n                <CalculatorButton clickHandler={() => addValue(4)}>4</CalculatorButton>\n                <CalculatorButton clickHandler={() => addValue(5)}>5</CalculatorButton>\n                <CalculatorButton clickHandler={() => addValue(6)}>6</CalculatorButton>\n                <CalculatorButton clickHandler={() => addOperator(CALCULATOR_OPERATORS.MINUS_SIGN)}>-</CalculatorButton>\n                <CalculatorButton clickHandler={() => addValue(7)}>7</CalculatorButton>\n                <CalculatorButton clickHandler={() => addValue(8)}>8</CalculatorButton>\n                <CalculatorButton clickHandler={() => addValue(9)}>9</CalculatorButton>\n                <CalculatorButton clickHandler={() => addOperator(CALCULATOR_OPERATORS.PLUS_SIGN)}>+</CalculatorButton>\n                <CalculatorButton clickHandler={() => dispatch({ type: CALCULATOR_CONSTANTS.ADD_DECIMAL })}>\n                    .\n                </CalculatorButton>\n                <CalculatorButton clickHandler={() => addValue(0)}>0</CalculatorButton>\n                <CalculatorButton\n                    width=\"2\"\n                    clickHandler={() => dispatch({ type: CALCULATOR_CONSTANTS.EQUALS_OPERATOR })}\n                >\n                    =\n                </CalculatorButton>\n            </CalculatorButtonGrid>\n            {children}\n        </CalculatorBox>\n    );\n};\n\nconst CalculatorBox = styled.div`\n    position: relative;\n    width: 95%;\n    max-width: 30rem;\n    border: 1px solid #999;\n    box-shadow: 5px 6px 12px -7px rgba(204, 204, 204, 1);\n`;\n\nconst CalculatorButtonGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n`;\n\nexport default Calculator;\n","import React, { createContext, useState, useEffect } from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\n\nconst ENDPOINT = `${\n    process.env.NODE_ENV === \"production\" ? process.env.PRODUCTION_SOCKET : process.env.DEVELOPMENT_SOCKET\n}`;\nconst socket = io(ENDPOINT);\n\nconst LOG_LIMIT = 10;\n\nexport const LogContext = createContext(null);\n\nconst LogProvider = ({ children }) => {\n    const [logs, setLogs] = useState([]);\n    const [name, setName] = useState(\"\");\n    const [color, setColor] = useState(null);\n\n    useEffect(() => {\n        axios\n            .get(\"/api\", {\n                withCredentials: true,\n            })\n            .then((res) => {\n                if (res.status === 200 && !res.data.color) {\n                    window.location.reload();\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n        socket.on(\"connected\", (data) => {\n            setLogs(data.logs);\n            setName(data.name);\n            setColor(data.color);\n        });\n    }, []);\n\n    useEffect(() => {\n        socket.on(\"receive\", (log) => {\n            const newLogs = [...logs.slice(logs.length >= 10 ? 1 : 0, logs.length), log];\n            setLogs(newLogs);\n            socket.emit(\"received\", newLogs);\n        });\n    }, [logs]);\n    /**\n     * CHANGE NAME\n     * @desc Changes the name and emits to a websocket the new name,\n     * and the websocket saves it to the session.\n     */\n\n    const changeName = (newName) => {\n        setName(newName);\n        socket.emit(\"changeinfo\", {\n            name: newName,\n            color,\n        });\n    };\n\n    /**\n     * GENERATE RANDOM COLOR\n     * @desc Generates a random HTML color code and the websocket saves\n     * it to the session.\n     */\n    const generateRandomColor = () => {\n        const randomColor = \"#\" + (0x1000000 + Math.random() * 0xffffff).toString(16).substr(1, 6);\n        setColor(randomColor);\n        socket.emit(\"changeinfo\", {\n            name,\n            color: randomColor,\n        });\n    };\n\n    /**\n     * ADD LOG\n     * @desc Takes a log and adds it at the end of the list of logs. If there is\n     * more than the limit, then it slices the first one out. The websocket takes\n     * these logs, saves it to session, and broadcasts it to other users.\n     */\n    const addLog = (log) => {\n        const newLog = { ...log, name, color, id: uuidv4() };\n        const newLogs = [...logs.slice(logs.length >= LOG_LIMIT ? 1 : 0, logs.length), newLog];\n        setLogs(newLogs);\n        socket.emit(\"submit\", newLogs);\n    };\n\n    return (\n        <LogContext.Provider value={{ logs, setLogs, name, color, changeName, generateRandomColor, addLog }}>\n            {children}\n        </LogContext.Provider>\n    );\n};\n\nexport default LogProvider;\n","import styled from \"styled-components\";\nimport { below } from \"../utilities\";\n\nexport const Container = styled.div`\n    margin: 0 auto;\n    padding: 0 2rem;\n    max-width: 105rem;\n    ${below.s`\n  padding: 0;\n  width: 90%;\n  `}\n    ${below.xs`\n  width: 92.5%;\n  `}\n`;\n","import styled from \"styled-components\";\n\nexport const Name = styled.span`\n    font-weight: 600;\n    color: ${(props) => (props.color ? props.color : \"black\")};\n`;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { CalculatorContext } from \"../context/CalculatorContext\";\nimport { LogContext } from \"../context/LogContext\";\nimport styled from \"styled-components\";\nimport { Name } from \"../elements/components\";\nimport { below } from \"../elements/utilities\";\n\nconst Logs = () => {\n    const { calculator } = useContext(CalculatorContext);\n    const { logs, addLog } = useContext(LogContext);\n    const { log } = calculator;\n\n    const previousRef = useRef();\n    const previous = previousRef.current;\n\n    const isEqual = ((prev, next) => {\n        if (!!prev === !next) return false;\n        else if (!!prev && !!next) {\n            return (\n                prev.operator === next.operator &&\n                prev.savedValue === next.savedValue &&\n                prev.prevValue === next.prevValue &&\n                prev.calculatedValue === next.calculatedValue\n            );\n        }\n        return true;\n    })(previous, log);\n\n    useEffect(() => {\n        if (!isEqual) {\n            previousRef.current = log;\n            addLog(log);\n        }\n    });\n\n    return (\n        <LogContainer>\n            {logs.map((aLog) => (\n                <p key={aLog.id}>\n                    <Name color={aLog.color}>{aLog.name === \"\" ? \"Anonymous\" : aLog.name}: </Name>\n                    {aLog.savedValue} {aLog.operator} {aLog.prevValue} = {aLog.calculatedValue}\n                </p>\n            ))}\n        </LogContainer>\n    );\n};\n\nconst LogContainer = styled.div`\n    position: absolute;\n    margin-top: 1rem;\n    top: 100%;\n    left: 0.5rem;\n    p {\n        font-size: 1.8rem;\n    }\n    font-family: Montserrat, sans-serif;\n    ${below.s`\n    opacity: 0;\n    pointer-events: none;\n    `}\n`;\n\nexport default Logs;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { LogContext } from \"../context/LogContext\";\n\nconst NameForm = () => {\n    const { name, color, changeName, generateRandomColor } = useContext(LogContext);\n\n    const colorHandler = (e) => {\n        e.preventDefault();\n        generateRandomColor();\n    };\n\n    return (\n        <Form>\n            <FormGroup>\n                <Label htmlFor=\"name\">Name:</Label>\n                <Input\n                    type=\"text\"\n                    id=\"name\"\n                    aria-label=\"Name\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e) => changeName(e.target.value)}\n                ></Input>\n            </FormGroup>\n            <FormGroup>\n                <Label htmlFor=\"Color\">Color:</Label>\n                <Color color={color}>{color}</Color>\n                <Button onClick={(e) => colorHandler(e)}>Randomize!</Button>\n            </FormGroup>\n        </Form>\n    );\n};\n\nexport default NameForm;\n\nconst Form = styled.form`\n    margin-bottom: 0.33rem;\n`;\n\nconst FormGroup = styled.div`\n    margin-bottom: 0.75rem;\n`;\n\nconst Label = styled.label`\n    font-size: 1.4rem;\n    margin-right: 0.5rem;\n`;\n\nconst Color = styled.span`\n    font-size: 1.4rem;\n    margin-right: 0.5rem;\n    font-weight: 600;\n    color: ${(props) => (props.color ? props.color : \"black\")};\n    text-shadow: 1px 1px rgba(0, 0, 0, 0.2);\n`;\n\nconst Button = styled.button`\n    padding: 0.25rem;\n    font-size: 1.3rem;\n    font-family: Montserrat, sans-serif;\n`;\n\nconst Input = styled.input`\n    padding: 0.25rem 0.5rem;\n    font-family: Montserrat, sans-serif;\n    max-width: 15rem;\n`;\n","import React, { useContext } from \"react\";\nimport { LogContext } from \"../context/LogContext\";\nimport styled from \"styled-components\";\nimport { FaTimes } from \"react-icons/fa\";\nimport { Name } from \"../elements/components\";\n\nconst MobileChat = ({ mobileMenuOn, timesHandler }) => {\n    const { logs } = useContext(LogContext);\n\n    return (\n        <Overlay className={mobileMenuOn ? \"test\" : \"\"}>\n            <ButtonWrapper onClick={timesHandler}>\n                <FaTimes />\n            </ButtonWrapper>\n            <ChatContainer>\n                <ChatHeader>Chat</ChatHeader>\n                {logs.map((aLog) => (\n                    <ChatLine key={aLog.id}>\n                        <Name color={aLog.color}>{aLog.name === \"\" ? \"Anonymous\" : aLog.name}: </Name>\n                        {aLog.savedValue} {aLog.operator} {aLog.prevValue} = {aLog.calculatedValue}\n                    </ChatLine>\n                ))}\n            </ChatContainer>\n        </Overlay>\n    );\n};\n\nconst Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    padding: 0.75rem;\n    z-index: 100;\n    background: rgba(255, 255, 255, 1);\n    background: linear-gradient(162deg, rgba(255, 255, 255, 1) 65%, rgba(220, 220, 220, 1) 100%);\n    opacity: 0;\n\n    pointer-events: none;\n    &.test {\n        opacity: 1;\n        pointer-events: auto;\n    }\n`;\n\nconst ButtonWrapper = styled.div`\n    position: fixed;\n    font-size: 4rem;\n    color: black;\n    top: 1rem;\n    right: 1rem;\n`;\n\nconst ChatContainer = styled.div`\n    text-align: center;\n`;\n\nconst ChatHeader = styled.h1`\n    margin-top: 2rem;\n    font-size: 4rem;\n`;\n\nconst ChatLine = styled.p`\n    font-size: 2rem;\n`;\n\nexport default MobileChat;\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Calculator from \"./components/Calculator\";\nimport Logs from \"./components/Logs\";\nimport { Container } from \"./elements/components\";\nimport CalculatorProvider from \"./context/CalculatorContext\";\nimport LogProvider from \"./context/LogContext\";\nimport NameForm from \"./components/NameForm\";\nimport styled from \"styled-components\";\nimport { below, belowHeight } from \"./elements/utilities\";\nimport MobileChat from \"./components/MobileChat\";\nimport { BsChatDots } from \"react-icons/bs\";\n\nfunction App() {\n    const [mobileMenu, setMobileMenu] = useState(false);\n\n    const timesHandler = () => {\n        setMobileMenu(false);\n    };\n\n    return (\n        <Router>\n            <CalculatorProvider>\n                <PageContainer>\n                    <LogProvider>\n                        <Route path=\"/\">\n                            <Header>Sezzle Calculator 🔢</Header>\n                            <NameForm />\n                            <Calculator>\n                                <Logs />\n                            </Calculator>\n                            <MobileChat mobileMenuOn={mobileMenu} timesHandler={timesHandler} />\n                            <ChatIconWrapper\n                                onClick={() =>\n                                    setMobileMenu((prev) => {\n                                        console.log(prev);\n                                        return !prev;\n                                    })\n                                }\n                            >\n                                <BsChatDots />\n                            </ChatIconWrapper>\n                        </Route>\n                    </LogProvider>\n                </PageContainer>\n            </CalculatorProvider>\n        </Router>\n    );\n}\nconst Header = styled.h1`\n    margin-bottom: 1rem;\n    font-size: 3.2rem;\n    ${below.s`\n    font-size: 2.75rem;\n    `}\n    color: #333;\n`;\n\nconst PageContainer = styled(Container)`\n    position: relative;\n    height: 86.5vh;\n    ${belowHeight.xs`\n        height: 97.5vh;\n        `}\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst ChatIconWrapper = styled.div`\n    position: fixed;\n    bottom: 1.25rem;\n    right: 1.25rem;\n    font-size: 4rem;\n    opacity: 0;\n    pointer-events: none;\n    ${below.s`\n        opacity: 1;\n        pointer-events: auto;\n    `}\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}